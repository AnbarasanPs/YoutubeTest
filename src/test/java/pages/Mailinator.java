package pages;

import java.util.Set;

import org.openqa.selenium.ElementClickInterceptedException;
import org.openqa.selenium.WebDriver;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import constants.Constants;
import utilities.LocalHelper;

public class Mailinator extends MailinatorRepo {
	public static String userLoginMail;
	public static String userLoginPassword;
	
	protected static final Logger logger = LoggerFactory.getLogger(Mailinator.class);
	private final LocalHelper localHelper = new LocalHelper();

	private final WebDriver driver;
	public Mailinator(WebDriver driver) {
		this.driver=driver;
	}
	public void launchMailinatorMail(WebDriver driver) {
		driver.get(Constants.mailinator);
	}
	public void enterEmail(String email) {
		localHelper.sendKeys(mailBox,email,driver);
		localHelper.clickElement(clickMail,driver);
	}
	public void clickEduleyApprovedMail() {
		try {
			localHelper.clickElement(eduleyApprovedMail, driver);
		}catch (ElementClickInterceptedException m) {
			localHelper.jsExecutorClick(eduleyApprovedMail, driver);
		}
		logger.info("user inbox eduley approved mail is clicked");
	}
	public void switchToFrame1(WebDriver driver) {
		driver.switchTo().frame("html_msg_body");
	}	
	public void switchToFrame2(WebDriver driver) {
		driver.switchTo().frame("_hjSafeContext_30966989");
	}	
	
	public void getMailAndPassword() {
		userLoginMail=localHelper.getTextButSplitBySpace(givenEmail,driver);
		 userLoginPassword=localHelper.getTextButSplitBySpace(autoGeneratedPassword,driver);
	}
	public void clickResetPasswordMail() {
		localHelper.scrollIntoView(resetPasswordMail, driver);
		try {
			localHelper.clickElement(resetPasswordMail, driver);
		}catch (ElementClickInterceptedException m) {
			localHelper.jsExecutorClick(resetPasswordMail, driver);
		}
		logger.info("user inbox Reset password mail is clicked");
	}
	public void clickResetPasswordButton() {
		try {
			localHelper.clickElement(resetPassword, driver);
		}catch (ElementClickInterceptedException m) {
			localHelper.jsExecutorClick(resetPassword, driver);
		}
		logger.info("Reset password button  is clicked");
	}
public void switchToNewAdminPortalWindow(WebDriver driver) {
		
		String windowHandle = driver.getWindowHandle();
		Set<String> windowHandles = driver.getWindowHandles();
		for (String string : windowHandles) {
			if(!string.contains(windowHandle)) {
				driver.switchTo().window(string);
			}
		}
		logger.info("Switched to new window");
	}
public void clickResetPasswordConfirmButton() {
	try {
		localHelper.clickElement(resetPasswordConfirm, driver);
	}catch (ElementClickInterceptedException m) {
		localHelper.jsExecutorClick(resetPasswordConfirm, driver);
	}
	logger.info("Reset password Confirm button  is clicked");
}

}
